From 634cb775c27b61ad6ce1fbe3e9972b0edfa31dcb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Hentschel?= <nerv@dawncrow.de>
Date: Mon, 15 Jun 2020 18:15:42 +0200
Subject: [PATCH] winex11.drv: Change whitelist to a more neutral word.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Andr√© Hentschel <nerv@dawncrow.de>
Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/winex11.drv/wintab.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/dlls/winex11.drv/wintab.c b/dlls/winex11.drv/wintab.c
index 92f957cf8d7..5cfc2b3a38d 100644
--- a/dlls/winex11.drv/wintab.c
+++ b/dlls/winex11.drv/wintab.c
@@ -394,7 +394,7 @@ static BOOL match_token(const char *haystack, const char *needle)
 static BOOL is_tablet_cursor(const char *name, const char *type)
 {
     int i;
-    static const char *tablet_cursor_whitelist[] = {
+    static const char *tablet_cursor_allowlist[] = {
         "wacom",
         "wizardpen",
         "acecad",
@@ -406,10 +406,10 @@ static BOOL is_tablet_cursor(const char *name, const char *type)
         NULL
     };
 
-    for (i=0; tablet_cursor_whitelist[i] != NULL; i++) {
-        if (name && match_token(name, tablet_cursor_whitelist[i]))
+    for (i=0; tablet_cursor_allowlist[i] != NULL; i++) {
+        if (name && match_token(name, tablet_cursor_allowlist[i]))
             return TRUE;
-        if (type && match_token(type, tablet_cursor_whitelist[i]))
+        if (type && match_token(type, tablet_cursor_allowlist[i]))
             return TRUE;
     }
     return FALSE;
@@ -418,7 +418,7 @@ static BOOL is_tablet_cursor(const char *name, const char *type)
 static UINT get_cursor_type(const char *name, const char *type)
 {
     int i;
-    static const char* tablet_stylus_whitelist[] = {
+    static const char* tablet_stylus_allowlist[] = {
         "stylus",
         "wizardpen",
         "acecad",
@@ -427,14 +427,14 @@ static UINT get_cursor_type(const char *name, const char *type)
     };
 
     /* First check device type to avoid cases where name is "Pen and Eraser" and type is "ERASER" */
-    for (i=0; tablet_stylus_whitelist[i] != NULL; i++) {
-        if (type && match_token(type, tablet_stylus_whitelist[i]))
+    for (i=0; tablet_stylus_allowlist[i] != NULL; i++) {
+        if (type && match_token(type, tablet_stylus_allowlist[i]))
             return CSR_TYPE_PEN;
     }
     if (type && match_token(type, "eraser"))
         return CSR_TYPE_ERASER;
-    for (i=0; tablet_stylus_whitelist[i] != NULL; i++) {
-        if (name && match_token(name, tablet_stylus_whitelist[i]))
+    for (i=0; tablet_stylus_allowlist[i] != NULL; i++) {
+        if (name && match_token(name, tablet_stylus_allowlist[i]))
             return CSR_TYPE_PEN;
     }
     if (name && match_token(name, "eraser"))
