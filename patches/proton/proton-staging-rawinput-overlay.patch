From 6906985a86c440ad773b9f0af743f3d97a2ecd01 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Wed, 18 Dec 2019 13:49:00 +0100
Subject: [PATCH] HACK: user32: Strip gameoverlayrenderer.so from LD_PRELOAD
 before executing explorer.exe.

Work around a bug in gameoverlayrenderer which introduces 50ms hangs
during XCheckIfEvent after approx 40 minutes of gameplay.
---
 dlls/user32/win.c | 55 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 55 insertions(+)

diff --git a/dlls/user32/win.c b/dlls/user32/win.c
index 3323ed3e41b..fa593a4a29a 100644
--- a/dlls/user32/win.c
+++ b/dlls/user32/win.c
@@ -48,6 +48,15 @@ static DWORD process_layout = ~0u;
 
 static struct list window_surfaces = LIST_INIT( window_surfaces );
 
+static CRITICAL_SECTION desktop_section;
+static CRITICAL_SECTION_DEBUG desktop_critsect_debug =
+{
+    0, 0, &desktop_section,
+    { &desktop_critsect_debug.ProcessLocksList, &desktop_critsect_debug.ProcessLocksList },
+      0, 0, { (DWORD_PTR)(__FILE__ ": desktop_section") }
+};
+static CRITICAL_SECTION desktop_section = { &desktop_critsect_debug, -1, 0, 0, 0, 0 };
+
 static CRITICAL_SECTION surfaces_section;
 static CRITICAL_SECTION_DEBUG critsect_debug =
 {
@@ -2106,6 +2106,7 @@ HWND WINAPI GetDesktopWindow(void)
         WCHAR app[MAX_PATH + ARRAY_SIZE( explorer )];
         WCHAR cmdline[MAX_PATH + ARRAY_SIZE( explorer ) + ARRAY_SIZE( args )];
         WCHAR desktop[MAX_PATH];
+        char *ld_preload;
         HANDLE token;
         void *redir;
 
@@ -2121,6 +2131,46 @@ HWND WINAPI GetDesktopWindow(void)
         strcpyW( cmdline, app );
         strcatW( cmdline, args );
 
+        EnterCriticalSection( &desktop_section);
+
+        /* HACK: Unset LD_PRELOAD before executing explorer.exe to disable buggy gameoverlayrenderer.so
+         * It's not going to work through the CreateProcessW env parameter, as it will not be used for the loader execv.
+         */
+        if ((ld_preload = getenv("LD_PRELOAD")))
+        {
+            static char const gorso[] = "gameoverlayrenderer.so";
+            static unsigned int gorso_len = ARRAY_SIZE(gorso) - 1;
+            char *env, *next, *tmp;
+
+            env = HeapAlloc(GetProcessHeap(), 0, strlen(ld_preload) + 1);
+            strcpy(env, ld_preload);
+
+            tmp = env;
+            do
+            {
+                if (!(next = strchr(tmp, ':')))
+                    next = tmp + strlen(tmp);
+
+                if (next - tmp >= gorso_len &&
+                    strncmp(next - gorso_len, gorso, gorso_len) == 0)
+                {
+                    if (*next)
+                        memmove(tmp, next + 1, strlen(next));
+                    else
+                        *tmp = 0;
+                    next = tmp;
+                }
+                else
+                {
+                    tmp = next + 1;
+                }
+            }
+            while (*next);
+
+            setenv("LD_PRELOAD", env, 1);
+            HeapFree(GetProcessHeap(), 0, env);
+        }
+
         Wow64DisableWow64FsRedirection( &redir );
         if (CreateProcessW( app, cmdline, NULL, NULL, FALSE, DETACHED_PROCESS,
                             NULL, windir, &si, &pi ))
@@ -2133,6 +2183,11 @@ HWND WINAPI GetDesktopWindow(void)
         else WARN( "failed to start explorer, err %d\n", GetLastError() );
         Wow64RevertWow64FsRedirection( redir );
 
+        /* HACK: Restore the previous value, just in case */
+        if (ld_preload) setenv("LD_PRELOAD", ld_preload, 1);
+
+        LeaveCriticalSection( &desktop_section );
+
         SERVER_START_REQ( get_desktop_window )
         {
             req->force = 1;
