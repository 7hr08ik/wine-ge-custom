From 49e5ebd7953c9668022e45ac81fe1cf829acf221 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 17 Jan 2020 10:26:29 +0100
Subject: [PATCH 1/4] winex11.drv: Rename X11DRV_XInput2_Init to
 X11DRV_XInput2_Load.

---
 dlls/winex11.drv/mouse.c       | 4 ++--
 dlls/winex11.drv/x11drv.h      | 2 +-
 dlls/winex11.drv/x11drv_main.c | 2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index d4cc9ae775d..3599362eb03 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -2054,9 +2054,9 @@ static BOOL X11DRV_RawButtonEvent( XGenericEventCookie *cookie )
 #endif /* HAVE_X11_EXTENSIONS_XINPUT2_H */
 
 /***********************************************************************
- *              X11DRV_XInput2_Init
+ *              X11DRV_XInput2_Load
  */
-void X11DRV_XInput2_Init(void)
+void X11DRV_XInput2_Load(void)
 {
 #if defined(SONAME_LIBXI)
     int event, error;
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 1ca924528b2..7d215f57545 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -198,7 +198,7 @@ extern BOOL CDECL X11DRV_UnrealizePalette( HPALETTE hpal ) DECLSPEC_HIDDEN;
 /* X11 driver internal functions */
 
 extern void X11DRV_Xcursor_Init(void) DECLSPEC_HIDDEN;
-extern void X11DRV_XInput2_Init(void) DECLSPEC_HIDDEN;
+extern void X11DRV_XInput2_Load(void) DECLSPEC_HIDDEN;
 extern void X11DRV_XInput2_Enable(void) DECLSPEC_HIDDEN;
 extern void X11DRV_XInput2_Disable(void) DECLSPEC_HIDDEN;
 
diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 3e8dd82654a..6b0f1ab03f6 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -619,7 +619,7 @@ static BOOL process_attach(void)
 #ifdef SONAME_LIBXCOMPOSITE
     X11DRV_XComposite_Init();
 #endif
-    X11DRV_XInput2_Init();
+    X11DRV_XInput2_Load();
 
 #ifdef HAVE_XKB
     if (use_xkb) use_xkb = XkbUseExtension( gdi_display, NULL, NULL );
-- 
2.25.0.rc2


From 976eadad9a2949fff17dd06295c7e5edd91eb63a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 17 Jan 2020 10:32:17 +0100
Subject: [PATCH 2/4] winex11.drv: Split XInput2 thread initialization to
 X11DRV_XInput2_Init.

---
 dlls/winex11.drv/mouse.c       | 44 +++++++++++++++++++++-------------
 dlls/winex11.drv/x11drv.h      |  1 +
 dlls/winex11.drv/x11drv_main.c |  2 ++
 3 files changed, 31 insertions(+), 16 deletions(-)

diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index 3599362eb03..6b3d152b21b 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -374,6 +374,33 @@ static void update_relative_valuators(XIAnyClassInfo **valuators, int n_valuator
 #endif
 
 
+/***********************************************************************
+ *              X11DRV_XInput2_Init
+ */
+void X11DRV_XInput2_Init(void)
+{
+#ifdef HAVE_X11_EXTENSIONS_XINPUT2_H
+    struct x11drv_thread_data *data = x11drv_thread_data();
+    int major = 2, minor = 1;
+
+    if (data->xi2_state != xi_unknown) return;
+
+    if (xinput2_available &&
+        !pXIQueryVersion( data->display, &major, &minor ) &&
+        major == 2 && minor > 0)
+    {
+        TRACE( "XInput2 v%d.%d available\n", major, minor );
+        data->xi2_state = xi_disabled;
+    }
+    else
+    {
+        data->xi2_state = xi_unavailable;
+        WARN( "XInput v2.1 not available\n" );
+    }
+#endif
+}
+
+
 /***********************************************************************
  *              X11DRV_XInput2_Enable
  */
@@ -386,23 +413,8 @@ void X11DRV_XInput2_Enable(void)
     unsigned char mask_bits[XIMaskLen(XI_LASTEVENT)];
     int count;
 
-    if (!xinput2_available) return;
+    if (data->xi2_state != xi_disabled) return;
 
-    if (data->xi2_state == xi_unknown)
-    {
-        int major = 2, minor = 1;
-        if (!pXIQueryVersion( data->display, &major, &minor ) && major == 2 && minor > 0)
-        {
-            TRACE( "XInput2 v%d.%d available\n", major, minor );
-            data->xi2_state = xi_disabled;
-        }
-        else
-        {
-            data->xi2_state = xi_unavailable;
-            WARN( "XInput v2.1 not available\n" );
-        }
-    }
-    if (data->xi2_state == xi_unavailable) return;
     if (!pXIGetClientPointer( data->display, None, &data->xi2_core_pointer )) return;
 
     mask.mask     = mask_bits;
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 7d215f57545..c7a5235900e 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -199,6 +199,7 @@ extern BOOL CDECL X11DRV_UnrealizePalette( HPALETTE hpal ) DECLSPEC_HIDDEN;
 
 extern void X11DRV_Xcursor_Init(void) DECLSPEC_HIDDEN;
 extern void X11DRV_XInput2_Load(void) DECLSPEC_HIDDEN;
+extern void X11DRV_XInput2_Init(void) DECLSPEC_HIDDEN;
 extern void X11DRV_XInput2_Enable(void) DECLSPEC_HIDDEN;
 extern void X11DRV_XInput2_Disable(void) DECLSPEC_HIDDEN;
 
diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 6b0f1ab03f6..b81b57e399b 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -716,6 +716,8 @@ struct x11drv_thread_data *x11drv_init_thread_data(void)
     TlsSetValue( thread_data_tls_index, data );
 
     if (use_xim) X11DRV_SetupXIM();
+
+    X11DRV_XInput2_Init();
     if (GetWindowThreadProcessId( GetDesktopWindow(), NULL ) == GetCurrentThreadId())
         X11DRV_XInput2_Enable();
 
-- 
2.25.0.rc2


From 6c4a8609288620ddef62fefc70209187fb6c315c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 17 Jan 2020 10:43:54 +0100
Subject: [PATCH 3/4] winex11.drv: Consistently trace XInput2 enable/disable
 calls.

---
 dlls/winex11.drv/mouse.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
index 6b3d152b21b..9c79e6d701d 100644
--- a/dlls/winex11.drv/mouse.c
+++ b/dlls/winex11.drv/mouse.c
@@ -413,6 +413,7 @@ void X11DRV_XInput2_Enable(void)
     unsigned char mask_bits[XIMaskLen(XI_LASTEVENT)];
     int count;
 
+    TRACE( "state %d\n", data->xi2_state );
     if (data->xi2_state != xi_disabled) return;
 
     if (!pXIGetClientPointer( data->display, None, &data->xi2_core_pointer )) return;
@@ -458,9 +459,9 @@ void X11DRV_XInput2_Disable(void)
     struct x11drv_thread_data *data = x11drv_thread_data();
     XIEventMask mask;
 
+    TRACE( "state %d\n", data->xi2_state );
     if (data->xi2_state != xi_enabled) return;
 
-    TRACE( "disabling\n" );
     data->xi2_state = xi_disabled;
 
     mask.mask = NULL;
-- 
2.25.0.rc2


From 84b3f5869e2e846367a7512763249c23a45b99c1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 17 Jan 2020 10:42:19 +0100
Subject: [PATCH 4/4] winex11.drv: In virtual desktop mode, enable XInput2 only
 when focused.

---
 dlls/winex11.drv/event.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index d056373a480..9b0e2feccba 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -793,6 +793,13 @@ static BOOL X11DRV_FocusIn( HWND hwnd, XEvent *xev )
     TRACE( "win %p xwin %lx detail=%s mode=%s\n", hwnd, event->window, focus_details[event->detail], focus_modes[event->mode] );
 
     if (event->detail == NotifyPointer) return FALSE;
+
+    if (is_virtual_desktop() && event->window == root_window && event->detail != NotifyInferior)
+    {
+        TRACE( "Virtual desktop gained focus, enabling XInput2.\n" );
+        X11DRV_XInput2_Enable();
+    }
+
     if (hwnd == GetDesktopWindow()) return FALSE;
 
     switch (event->mode)
@@ -897,6 +904,13 @@ static BOOL X11DRV_FocusOut( HWND hwnd, XEvent *xev )
         if (!hwnd && event->window == x11drv_thread_data()->clip_window) reset_clipping_window();
         return TRUE;
     }
+
+    if (is_virtual_desktop() && event->window == root_window && event->detail != NotifyInferior)
+    {
+        TRACE( "Virtual desktop lost focus, disabling XInput2.\n" );
+        X11DRV_XInput2_Disable();
+    }
+
     if (!hwnd) return FALSE;
 
     switch (event->mode)
-- 
2.25.0.rc2
